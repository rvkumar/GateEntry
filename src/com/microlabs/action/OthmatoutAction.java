/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.microlabs.action;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.omg.CORBA.StringHolder;

import com.microlabs.db.ConnectionFactory;
import com.microlabs.form.OthmatoutForm;
import com.microlabs.db.OthmatoutDB;
import com.microlabs.utils.MicrolabsUtils;

/** 
 * MyEclipse Struts
 * Creation date: 02-08-2013
 * 
 * XDoclet definition:
 */
public class OthmatoutAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	public ActionForward displayall(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OthmatoutForm othmatoutForm = (OthmatoutForm) form;// TODO Auto-generated method stub
		
		HttpSession session=request.getSession();
		Connection geconn = ConnectionFactory.getConnection();
		
		String addview = request.getParameter("id");
		String location = (String)session.getAttribute("LocationName");
		String locationid = (String)session.getAttribute("Locationid");
	
		cleardata(mapping, form, request, response);		
		OthmatoutDB mw=new OthmatoutDB();

		
		try {
			Statement st = geconn.createStatement();
			OthmatoutDB mi=new OthmatoutDB();
			if (addview == null){ 
			
			ArrayList a1=mi.getOthmatout(locationid);
			request.setAttribute("disothermatout", a1);
			}


			
	} catch (SQLException e) {
			e.printStackTrace();
	}
		
		return mapping.findForward("displayall");
	}
	
	
	
	public ActionForward display(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OthmatoutForm othmatoutForm = (OthmatoutForm) form;// TODO Auto-generated method stub
		
		HttpSession session=request.getSession();
		Connection geconn = ConnectionFactory.getConnection();
		
		String addview = request.getParameter("id");
		String location = (String)session.getAttribute("LocationName");
		String locationid = (String)session.getAttribute("Locationid");
	
		cleardata(mapping, form, request, response);		
		OthmatoutDB mw=new OthmatoutDB();
		
		try {
			Statement st = geconn.createStatement();

			OthmatoutDB mi=new OthmatoutDB();
			if (addview == null){ 
			
			ArrayList a1=mi.getOthmatout(locationid);
			request.setAttribute("disothermatout", a1);
			}
			othmatoutForm.setDeptlist(mi.getdeptlist());
			
	} catch (SQLException e) {
			e.printStackTrace();
	}
		
		return mapping.findForward("display");
	}

	
	public ActionForward cleardata(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OthmatoutForm othmatoutForm = (OthmatoutForm) form;// TODO Auto-generated method stub

		 Connection geconn = ConnectionFactory.getConnection();
		 String sqlreccnt="select max(GO_DCNO) as GO_DCNO from GE_OTHERMAT_M";
		 int go_dcno=1;
		 try {
			 Statement st = geconn.createStatement();			
			 ResultSet rs1 = st.executeQuery(sqlreccnt);
			 	
			 	if (rs1.next())
				{
			 		
					go_dcno=rs1.getInt("GO_DCNO")+1;
				}
			 	
			 	
		 }catch (Exception e) {
			e.printStackTrace();
		}
		 othmatoutForm.setFinyear("") ;
		 othmatoutForm.setGodcno(String.valueOf(go_dcno));
		 othmatoutForm.setGodcdate(MicrolabsUtils.getSysDate());
		 othmatoutForm.setSentby("");
		 othmatoutForm.setSentdept("");
		 othmatoutForm.setDestination("");
		 othmatoutForm.setExptimeout("");
		 othmatoutForm.setType("Non Returnable"); //radio button default value
		 othmatoutForm.setExpretdate("");
		 othmatoutForm.setRemarks("");
		
		// ge_matinward_details fields
		 othmatoutForm.setItemno("");
		 othmatoutForm.setItemcode("");
		 othmatoutForm.setItemdesc("");
		 othmatoutForm.setUom("");
		 othmatoutForm.setNoofcases("");
		 othmatoutForm.setQty("");
		 othmatoutForm.setQtyrcvd("");
		 
		 othmatoutForm.setSentdept("Select");
		
		return null;
	
	}	
	
	
	public ActionForward submit(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) {
		OthmatoutForm othmatoutForm = (OthmatoutForm) form;// TODO Auto-generated method stub
			
			
		othmatoutForm.setGodcdate(MicrolabsUtils.getmssqldatetime());
		othmatoutForm.setExptimeout(MicrolabsUtils.getSysTime());
		//othmatoutForm.setExpretdate(MicrolabsUtils.getmssqldatetime());
			
			 HttpSession session = request.getSession();
			 String gateno = (String)session.getAttribute("GateNo");
			 String username = (String)session.getAttribute("UserName");
			 String location = (String)session.getAttribute("LocationName");
			 String locationid = location.substring(0,location.lastIndexOf("-"));

			 
				String finyear = othmatoutForm.getFinyear() ;
				String godcno = othmatoutForm.getGodcno();
				String godcdate = othmatoutForm.getGodcdate();
				String sentby = othmatoutForm.getSentby();
				String sentdept = othmatoutForm.getSentdept();
				String destination = othmatoutForm.getDestination();
				String exptimeout = othmatoutForm.getExptimeout();
				String type = othmatoutForm.getType();
				String expretdate = othmatoutForm.getExpretdate();
				String remarks = othmatoutForm.getRemarks();
				
				// ge_othermat_details fields
				String itemno = othmatoutForm.getItemno();
				
				String itemcode = othmatoutForm.getItemcode();
				String itemdesc = othmatoutForm.getItemdesc();
				String uom = othmatoutForm.getUom();
				String noofcases = othmatoutForm.getNoofcases();
				String qty = othmatoutForm.getQty();
				String qtyrcvd = othmatoutForm.getQtyrcvd();

				 try {
					 
					 Connection geconn = ConnectionFactory.getConnection();
						Statement st = geconn.createStatement();
				 String sqlreccnt="select max(GO_DCNO) as GO_DCNO from GE_OTHERMAT_M";
				 
				 ResultSet rs1 = st.executeQuery(sqlreccnt);
				 int go_dcno=1;
				 if (rs1.next())
				 {
					 go_dcno=rs1.getInt("Go_DCNO")+1;
				 }
				 
				 String sql1="insert into GE_OTHERMAT_M (FIN_YEAR,"+
							"LOCATION_ID,"+
							"GATE_NO,"+
							"GO_DCNO,"+
							"GO_DCDATE, "+
							"GO_SENTBY, "+
							"GO_SENTDEPT, "+
							"GO_DESTINATION, "+
							"GO_EXPTIMEOUT, "+
							"GO_TYPE, "+
							"GO_EXPRETDATE, "+
							"GO_REMARKS) values ('"+finyear+"','"+locationid+"','"+gateno+"','"+go_dcno+"','"+godcdate+"'," +
									"'"+sentby+"','"+sentdept+"','"+destination+"','"+exptimeout+"','"+type+"'," +
									"'"+MicrolabsUtils.dateConvert(expretdate)+"','"+remarks+"')";
					
							int insert1 = st.executeUpdate(sql1);
						
									String[] ItemDesc=request.getParameterValues("ItemDesc");
									String[] ItemUom=request.getParameterValues("ItemUom");
									String[] ItemCases=request.getParameterValues("ItemCases");
									String[] ItemQty=request.getParameterValues("ItemQty");
									int count=1;
							for(int i=0;i<ItemDesc.length;i++){
								 	
								/*System.out.println("matid[i]"+matid[i]);
								System.out.println("ItemDesc[i]"+ItemDesc[i]);
								System.out.println("ItemUom[i]"+ItemUom[i]);
								System.out.println("ItemQtyrcvd[i]"+ItemQtyrcvd[i]);
								System.out.println("ItemCases[i]"+ItemCases[i]);*/
								
								String sql2="insert into GE_OTHERMAT_D (GO_DCNO,"+
									"ITEM_NO,"+
									"ITEM_DESC, "+
									"UOM, "+
									"NO_OF_CASES, "+
									"QTY, "+
									"CREATED_BY, "+
									"CREATED_DATE) values ('"+go_dcno+"','"+count+"'," +
											"'"+ItemDesc[i]+"','"+ItemUom[i]+"'," +
											"'"+ItemCases[i]+"','"+ItemQty[i]+"','"+username+"','"+MicrolabsUtils.getmssqldatetime()+"')";
							
								 System.out.println("Getting sql2 is ************"+sql2);
									int insert2 = st.executeUpdate(sql2);
									count++;
								 
							}
							
							if (insert1>0 ){
								
								cleardata(mapping, form, request, response);
								othmatoutForm.setMessage("Materials Details saved Successfully...");
							}else {
								othmatoutForm.setMessage("Error while saving details...");
							}

							OthmatoutDB mv=new OthmatoutDB();
							othmatoutForm.setDeptlist(mv.getdeptlist());
							
				 }catch (Exception e) {
						e.printStackTrace();
					}
					//return display(mapping, form, request, response);
					
				return mapping.findForward("display");
			 
			}

}